// File: lib/widgets/minigames/emoji_movie_game.dart

import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import '../../movie.dart';
import 'dart:math';

class EmojiMovieGame extends StatefulWidget {
  final List<Movie> movies;
  final VoidCallback? onExit;
  final Function(int score, bool completed)? onGameComplete;

  const EmojiMovieGame({
    super.key,
    required this.movies,
    this.onExit,
    this.onGameComplete,
  });

  @override
  State<EmojiMovieGame> createState() => _EmojiMovieGameState();
}

class _EmojiMovieGameState extends State<EmojiMovieGame> with TickerProviderStateMixin {
  late List<Movie> gameMovies;
  int currentQuestionIndex = 0;
  int score = 0;
  int streak = 0;
  bool hasAnswered = false;
  bool isCorrect = false;
  String selectedAnswer = '';
  
  late AnimationController _scoreController;
  late AnimationController _emojiController;
  late Animation<double> _scoreAnimation;
  late Animation<double> _emojiAnimation;

  // Simplified but comprehensive emoji mappings
  static const Map<String, String> genreEmojis = {
    'Action': '⚔️',
    'Adventure': '🗺️',
    'Animation': '🎨',
    'Comedy': '😂',
    'Crime': '🔫',
    'Documentary': '📽️',
    'Drama': '🎭',
    'Family': '👨‍👩‍👧‍👦',
    'Fantasy': '🧙‍♂️',
    'History': '🏛️',
    'Horror': '😱',
    'Music': '🎵',
    'Mystery': '🕵️',
    'Romance': '💕',
    'Sci-Fi': '🚀',
    'Thriller': '😰',
    'War': '⚰️',
    'Western': '🤠',
  };

  static const Map<String, String> tagEmojis = {
    'zombie': '🧟‍♂️',
    'portal': '🌀',
    'teamwork': '🤝',
    'surrealism': '🎭',
    'based on video game': '🎮',
    'exploration': '🔍',
    'building': '🏗️',
    'friends': '👫',
    'duringcreditsstinger': '🎬',
    'fantasy': '🧙‍♂️',
    'friendship': '👫',
    'miner': '⛏️',
    'aftercreditsstinger': '🎬',
    'live action and animation': '🎭',
    'amused': '😄',
    'imagination': '💭',
    'survival': '🏕️',
    'journey': '🛤️',
    'magic': '✨',
    'wizard': '🧙‍♂️',
    'dragon': '🐉',
    'robot': '🤖',
    'alien': '👽',
    'space': '🌌',
    'time': '⏰',
    'love': '❤️',
    'wedding': '💒',
    'family': '👨‍👩‍👧‍👦',
    'school': '🏫',
    'police': '👮‍♂️',
    'detective': '🕵️',
    'spy': '🕴️',
    'heist': '💰',
    'prison': '🔒',
    'court': '⚖️',
    'hospital': '🏥',
    'doctor': '👨‍⚕️',
    'war': '⚔️',
    'soldier': '🪖',
    'pirate': '🏴‍☠️',
    'ocean': '🌊',
    'ship': '🚢',
    'treasure': '💎',
    'monster': '👹',
    'ghost': '👻',
    'vampire': '🧛‍♂️',
    'werewolf': '🐺',
    'witch': '🧙‍♀️',
    'car': '🚗',
    'racing': '🏎️',
    'motorcycle': '🏍️',
    'airplane': '✈️',
    'train': '🚂',
    'fire': '🔥',
    'explosion': '💥',
    'gun': '🔫',
    'sword': '⚔️',
    'knife': '🔪',
    'bomb': '💣',
    'crown': '👑',
    'castle': '🏰',
    'kingdom': '🏛️',
    'princess': '👸',
    'prince': '🤴',
    'superhero': '🦸‍♂️',
    'villain': '🦹‍♂️',
    'mask': '🎭',
    'circus': '🎪',
    'clown': '🤡',
    'music': '🎵',
    'dance': '💃',
    'singing': '🎤',
    'guitar': '🎸',
    'piano': '🎹',
    'sports': '⚽',
    'boxing': '🥊',
    'basketball': '🏀',
    'football': '🏈',
    'baseball': '⚾',
    'christmas': '🎄',
    'halloween': '🎃',
    'birthday': '🎂',
    'party': '🎉',
    'beach': '🏖️',
    'mountain': '🏔️',
    'forest': '🌲',
    'desert': '🏜️',
    'city': '🏙️',
    'village': '🏘️',
    'farm': '🚜',
    'jungle': '🌴',
    'snow': '❄️',
    'rain': '🌧️',
    'storm': '⛈️',
    'sun': '☀️',
    'moon': '🌙',
    'star': '⭐',
    'earth': '🌍',
    'planet': '🪐',
    'comet': '☄️',
    'asteroid': '☄️',
    'black hole': '🕳️',
    'laboratory': '🧪',
    'scientist': '👨‍🔬',
    'experiment': '🔬',
    'mutation': '🧬',
    'virus': '🦠',
    'pandemic': '😷',
    'apocalypse': '💀',
    'end of world': '🌍💥',
    'artificial intelligence': '🤖',
    'virtual reality': '🥽',
    'internet': '🌐',
    'hacker': '💻',
    'code': '📱',
    'technology': '⚙️',
    'future': '🔮',
    'past': '📜',
    'ancient': '🏺',
    'egypt': '🔺',
    'rome': '🏛️',
    'medieval': '🗡️',
    'viking': '⚔️',
    'samurai': '🗾',
    'ninja': '🥷',
    'martial arts': '🥋',
    'kung fu': '👊',
    'temple': '🛕',
    'monk': '🧘‍♂️',
    'meditation': '🕉️',
    'religion': '⛪',
    'angel': '👼',
    'devil': '😈',
    'heaven': '☁️',
    'hell': '🔥',
    'afterlife': '👻',
    'reincarnation': '🔄',
    'soul': '✨',
    'spirit': '👻',
    'dream': '💭',
    'nightmare': '😱',
    'sleep': '😴',
    'awake': '👀',
    'consciousness': '🧠',
    'memory': '🧠',
    'amnesia': '❓',
    'identity': '🆔',
    'doppelganger': '👯‍♂️',
    'mirror': '🪞',
    'reflection': '🪞',
    'shadow': '👥',
    'invisible': '👻',
    'teleportation': '🌀',
    'transformation': '🦋',
    'shape-shifting': '🔄',
    'animal': '🐾',
    'dog': '🐕',
    'cat': '🐱',
    'horse': '🐎',
    'lion': '🦁',
    'tiger': '🐅',
    'bear': '🐻',
    'wolf': '🐺',
    'shark': '🦈',
    'whale': '🐋',
    'dolphin': '🐬',
    'bird': '🐦',
    'eagle': '🦅',
    'snake': '🐍',
    'spider': '🕷️',
    'dinosaur': '🦕',
    'unicorn': '🦄',
    'phoenix': '🔥🐦',
    'mermaid': '🧜‍♀️',
    'centaur': '🐴👨',
    'giant': '🗿',
    'dwarf': '🧙‍♂️',
    'elf': '🧝‍♂️',
    'fairy': '🧚‍♀️',
    'troll': '👹',
    'ogre': '👹',
    'goblin': '👺',
    'orc': '👹',
    'skeleton': '💀',
    'mummy': '🏺',
    'frankenstein': '🧟‍♂️',
    'jekyll and hyde': '😇😈',
    'invisible man': '👻',
    'time traveler': '⏰🚀',
    'immortal': '♾️',
    'prophecy': '🔮',
    'curse': '🪬',
    'spell': '✨',
    'potion': '🧪',
    'wand': '🪄',
    'crystal': '💎',
    'amulet': '🧿',
    'ring': '💍',
    'shield': '🛡️',
    'armor': '🛡️',
    'bow': '🏹',
    'arrow': '➡️',
    'spear': '🗡️',
    'axe': '🪓',
    'hammer': '🔨',
    'book': '📚',
    'scroll': '📜',
    'map': '🗺️',
    'compass': '🧭',
    'key': '🔑',
    'lock': '🔒',
    'door': '🚪',
    'window': '🪟',
    'bridge': '🌉',
    'tower': '🗼',
    'lighthouse': '🗼',
    'cave': '🕳️',
    'tunnel': '🕳️',
    'maze': '🌀',
    'labyrinth': '🌀',
    'puzzle': '🧩',
    'riddle': '❓',
    'secret': '🤫',
    'mystery': '❓',
    'clue': '🔍',
    'evidence': '🔬',
    'investigation': '🕵️‍♂️',
    'trial': '⚖️',
    'justice': '⚖️',
    'revenge': '😡',
    'betrayal': '🗡️💔',
    'loyalty': '🤝',
    'honor': '🏅',
    'courage': '🦁',
    'bravery': '🛡️',
    'fear': '😨',
    'terror': '😱',
    'horror': '👹',
    'suspense': '😰',
    'tension': '😬',
    'drama': '🎭',
    'comedy': '😂',
    'humor': '😄',
    'joke': '😆',
    'laugh': '😂',
    'smile': '😊',
    'tears': '😢',
    'cry': '😭',
    'sad': '😢',
    'happy': '😊',
    'angry': '😡',
    'mad': '🤬',
    'crazy': '🤪',
    'insane': '😵‍💫',
    'confused': '😕',
    'surprised': '😲',
    'shocked': '😱',
    'amazed': '🤯',
    'wonder': '😮',
    'awe': '😮',
    'beauty': '😍',
    'ugly': '🤢',
    'disgusting': '🤮',
    'gross': '🤢',
    'sick': '🤒',
    'healthy': '💪',
    'strong': '💪',
    'weak': '😵',
    'fast': '💨',
    'slow': '🐌',
    'big': '🦣',
    'small': '🐁',
    'tall': '🦒',
    'short': '🐧',
    'fat': '🐷',
    'thin': '🦴',
    'young': '👶',
    'old': '👴',
    'new': '✨',
    'modern': '🏙️',
    'classic': '🎩',
    'vintage': '📻',
    'retro': '📺',
    'contemporary': '🏢',
    'futuristic': '🚀',
    'realistic': '📷',
    'fictional': '📚',
    'true story': '📰',
    'based on': '📖',
    'remake': '🔄',
    'sequel': '2️⃣',
    'prequel': '1️⃣',
    'trilogy': '3️⃣',
    'series': '📺',
    'episode': '📺',
    'season': '🍂',
    'finale': '🏁',
    'beginning': '🚀',
    'end': '🏁',
    'middle': '⏸️',
    'start': '▶️',
    'stop': '⏹️',
    'pause': '⏸️',
    'play': '▶️',
    'rewind': '⏪',
    'fast forward': '⏩',
    'repeat': '🔁',
    'shuffle': '🔀',
    'random': '🎲',
    'chance': '🎰',
    'luck': '🍀',
    'fate': '🔮',
    'destiny': '⭐',
    'choice': '🤔',
    'decision': '⚖️',
    'option': '📋',
    'alternative': '🔀',
    'path': '🛤️',
    'road': '🛣️',
    'travel': '✈️',
    'vacation': '🏖️',
    'holiday': '🎄',
    'adventure': '🗺️',
    'quest': '🗡️',
    'mission': '🎯',
    'goal': '⚽',
    'target': '🎯',
    'aim': '🏹',
    'purpose': '🎯',
    'meaning': '💭',
    'life': '🌱',
    'death': '💀',
    'birth': '👶',
    'growth': '🌱',
    'evolution': '🐒➡️👨',
    'change': '🔄',
    'metamorphosis': '🐛➡️🦋',
    'development': '📈',
    'progress': '📊',
    'success': '🏆',
    'failure': '❌',
    'victory': '🏆',
    'defeat': '😞',
    'win': '🥇',
    'lose': '😢',
    'champion': '🏆',
    'winner': '🥇',
    'loser': '😢',
    'competition': '🏁',
    'contest': '🏁',
    'race': '🏃‍♂️',
    'marathon': '🏃‍♂️',
    'sprint': '💨',
    'speed': '⚡',
    'acceleration': '🚀',
    'velocity': '💨',
    'motion': '🏃‍♂️',
    'movement': '🚶‍♂️',
    'action': '⚡',
    'activity': '🏃‍♂️',
    'exercise': '💪',
    'workout': '🏋️‍♂️',
    'training': '🏃‍♂️',
    'practice': '🎯',
    'rehearsal': '🎭',
    'performance': '🎪',
    'show': '🎭',
    'exhibition': '🖼️',
    'display': '📺',
    'presentation': '📊',
    'demonstration': '👨‍🏫',
    'explanation': '💬',
    'description': '📝',
    'story': '📚',
    'tale': '📖',
    'narrative': '📚',
    'plot': '📈',
    'storyline': '📚',
    'script': '📝',
    'dialogue': '💬',
    'conversation': '🗣️',
    'discussion': '💭',
    'debate': '⚖️',
    'argument': '🗯️',
    'fight': '👊',
    'battle': '⚔️',
    'conflict': '⚔️',
    'struggle': '💪',
    'challenge': '🎯',
    'difficulty': '😰',
    'problem': '❓',
    'solution': '💡',
    'answer': '✅',
    'question': '❓',
    'doubt': '🤔',
    'uncertainty': '❓',
    'confusion': '😕',
    'clarity': '💡',
    'understanding': '🧠',
    'knowledge': '📚',
    'wisdom': '🦉',
    'intelligence': '🧠',
    'genius': '🤓',
    'smart': '🧠',
    'clever': '😏',
    'brilliant': '✨',
    'stupid': '😵',
    'dumb': '🤤',
    'ignorant': '🙈',
    'naive': '😇',
    'innocent': '👶',
    'pure': '🤍',
    'clean': '✨',
    'dirty': '🤢',
    'messy': '🌪️',
    'organized': '📚',
    'chaos': '🌪️',
    'order': '📊',
    'structure': '🏗️',
    'system': '⚙️',
    'method': '📋',
    'process': '🔄',
    'procedure': '📝',
    'routine': '⏰',
    'habit': '🔄',
    'custom': '📜',
    'tradition': '🏛️',
    'culture': '🎭',
    'society': '🏙️',
    'community': '👥',
    'group': '👨‍👩‍👧‍👦',
    'team': '🤝',
    'crew': '👥',
    'gang': '👥',
    'band': '🎵',
    'club': '🏢',
    'organization': '🏢',
    'company': '🏢',
    'business': '💼',
    'work': '💼',
    'job': '👔',
    'career': '📈',
    'profession': '👔',
    'occupation': '💼',
    'employment': '💼',
    'unemployment': '😞',
    'retirement': '👴',
    'pension': '💰',
    'money': '💰',
    'wealth': '💎',
    'rich': '💰',
    'poor': '😢',
    'poverty': '💔',
    'fortune': '💰',
    'gold': '🥇',
    'silver': '🥈',
    'bronze': '🥉',
    'diamond': '💎',
    'ruby': '💎',
    'emerald': '💚',
    'sapphire': '💙',
    'pearl': '🤍',
    'jewelry': '💍',
    'necklace': '📿',
    'bracelet': '⌚',
    'earring': '👂',
    'watch': '⌚',
    'clock': '🕐',
    'hour': '🕐',
    'minute': '⏱️',
    'second': '⏱️',
    'moment': '⏳',
    'instant': '⚡',
    'eternity': '♾️',
    'forever': '♾️',
    'never': '🚫',
    'always': '♾️',
    'sometimes': '🔄',
    'often': '🔄',
    'rarely': '🔄',
    'seldom': '🔄',
    'frequently': '🔄',
    'constantly': '♾️',
    'continuously': '♾️',
    'permanently': '♾️',
    'temporarily': '⏳',
    'briefly': '⏱️',
    'quickly': '⚡',
    'slowly': '🐌',
    'gradually': '📈',
    'suddenly': '⚡',
    'immediately': '⚡',
    'eventually': '⏳',
    'finally': '🏁',
    'lastly': '🔚',
    'firstly': '1️⃣',
    'initially': '🚀',
    'originally': '📜',
    'previously': '⏪',
    'formerly': '📜',
    'currently': '⏯️',
    'presently': '📍',
    'now': '⏯️',
    'today': '📅',
    'yesterday': '📅',
    'tomorrow': '📅',
    'history': '📜',
    'timeline': '📊',
    'chronology': '📅',
    'sequence': '🔢',
    'pattern': '🔄',
    'cycle': '🔄',
    'loop': '🔄',
    'repetition': '🔁',
    'rhythm': '🎵',
    'beat': '🥁',
    'pulse': '💓',
    'heart': '❤️',
    'passion': '🔥',
    'desire': '😍',
    'lust': '😏',
    'attraction': '🧲',
    'romance': '💕',
    'relationship': '💑',
    'couple': '💑',
    'marriage': '💒',
    'divorce': '💔',
    'breakup': '💔',
    'separation': '💔',
    'loneliness': '😞',
    'solitude': '🧘‍♂️',
    'isolation': '🏝️',
    'abandon': '😞',
    'rejection': '❌',
    'acceptance': '✅',
    'approval': '👍',
    'disapproval': '👎',
    'agreement': '🤝',
    'disagreement': '🚫',
    'peace': '☮️',
    'violence': '👊',
    'aggression': '😡',
    'hostility': '😠',
    'hatred': '😡',
    'dislike': '👎',
    'like': '👍',
    'preference': '⭐',
    'selection': '☑️',
    'judgment': '⚖️',
    'opinion': '💭',
    'belief': '🙏',
    'faith': '🙏',
    'trust': '🤝',
    'confidence': '💪',
    'suspicion': '🤨',
    'skepticism': '🤔',
    'cynicism': '😒',
    'optimism': '😊',
    'pessimism': '😞',
    'hope': '🌟',
    'despair': '😞',
    'hopelessness': '💔',
    'depression': '😞',
    'sadness': '😢',
    'sorrow': '😢',
    'grief': '😭',
    'mourning': '🖤',
    'loss': '💔',
    'absence': '👻',
    'presence': '👋',
    'existence': '🌟',
    'reality': '🌍',
    'vision': '👁️',
    'hallucination': '😵‍💫',
    'illusion': '🎩',
    'mirage': '🌄',
    'deception': '🎭',
    'lie': '🤥',
    'truth': '✅',
    'honesty': '😇',
    'sincerity': '💯',
    'authenticity': '✅',
    'genuine': '💎',
    'fake': '🎭',
    'artificial': '🤖',
    'natural': '🌿',
    'organic': '🌱',
    'synthetic': '🧪',
    'chemical': '⚗️',
    'biological': '🧬',
    'physical': '💪',
    'mental': '🧠',
    'emotional': '❤️',
    'spiritual': '✨',
    'psychological': '🧠',
    'philosophical': '🤔',
    'theoretical': '📚',
    'practical': '🔨',
    'applied': '⚙️',
    'scientific': '🔬',
    'technical': '⚙️',
    'mechanical': '🔧',
    'electrical': '⚡',
    'electronic': '📱',
    'digital': '💻',
    'analog': '📻',
    'virtual': '🥽',
    'augmented': '📱',
    'enhanced': '⬆️',
    'improved': '📈',
    'upgraded': '⬆️',
    'advanced': '🚀',
    'sophisticated': '🎩',
    'complex': '🧩',
    'complicated': '😵‍💫',
    'simple': '😊',
    'easy': '👍',
    'difficult': '😰',
    'hard': '💪',
    'tough': '💪',
    'challenging': '🎯',
    'demanding': '😤',
    'requiring': '📝',
    'necessary': '✅',
    'essential': '⭐',
    'important': '❗',
    'critical': '🚨',
    'urgent': '⏰',
    'emergency': '🚨',
    'crisis': '😱',
    'disaster': '💥',
    'catastrophe': '🌪️',
    'tragedy': '😭',
    'misfortune': '😞',
    'accident': '💥',
    'mistake': '😅',
    'error': '❌',
    'fault': '⚠️',
    'blame': '👉',
    'responsibility': '📋',
    'duty': '📝',
    'obligation': '📋',
    'requirement': '📝',
    'rule': '📏',
    'law': '⚖️',
    'regulation': '📋',
    'guideline': '📝',
    'instruction': '📋',
    'direction': '➡️',
    'guidance': '🧭',
    'advice': '💡',
    'suggestion': '💭',
    'recommendation': '👍',
    'proposal': '📝',
    'plan': '📋',
    'strategy': '♟️',
    'tactic': '🎯',
    'approach': '🚶‍♂️',
    'technique': '🔧',
    'skill': '🎯',
    'ability': '💪',
    'talent': '⭐',
    'gift': '🎁',
    'expertise': '🎓',
    'experience': '📚',
    'education': '🎓',
    'learning': '📚',
    'study': '📖',
    'research': '🔬',
    'analysis': '📊',
    'examination': '🔍',
    'inspection': '👀',
    'observation': '👁️',
    'monitoring': '📊',
    'surveillance': '📹',
    'watching': '👀',
    'looking': '👁️',
    'seeing': '👀',
    'viewing': '📺',
    'witnessing': '👁️‍🗨️',
    'spectating': '👀',
    'audience': '👥',
    'crowd': '👥',
    'public': '🌍',
    'people': '👥',
    'person': '👤',
    'individual': '👤',
    'character': '🎭',
    'personality': '😊',
    'trait': '📋',
    'characteristic': '📝',
    'feature': '⭐',
    'quality': '💎',
    'property': '🏠',
    'attribute': '📋',
    'aspect': '🔍',
    'element': '⚛️',
    'component': '🧩',
    'part': '🧩',
    'piece': '🧩',
    'fragment': '🧩',
    'section': '📋',
    'segment': '📊',
    'portion': '🍰',
    'share': '🤝',
    'division': '➗',
    'split': '✂️',
    'break': '💔',
    'crack': '🔧',
    'damage': '💥',
    'destruction': '💥',
    'ruin': '🏚️',
    'collapse': '💥',
    'fall': '⬇️',
    'drop': '⬇️',
    'decline': '📉',
    'decrease': '📉',
    'reduction': '📉',
    'gain': '📈',
    'increase': '📈',
    'expansion': '📈',
    'enhancement': '⬆️',
    'upgrade': '⬆️',
    'advancement': '🚀',
    'modification': '🔧',
    'alteration': '🔄',
    'adjustment': '⚙️',
    'adaptation': '🔄',
    'flexibility': '🤸‍♂️',
    'versatility': '🎭',
    'diversity': '🌈',
    'variety': '🎨',
    'difference': '↔️',
    'distinction': '🔍',
    'uniqueness': '⭐',
    'originality': '✨',
    'creativity': '🎨',
    'innovation': '💡',
    'invention': '⚙️',
    'discovery': '🔍',
    'finding': '🔍',
    'search': '🔍',
    'hunt': '🏹',
    'pursuit': '🏃‍♂️',
    'chase': '🏃‍♂️',
    'follow': '👣',
    'trail': '🛤️',
    'route': '🗺️',
    'way': '➡️',
    'destination': '📍',
    'objective': '🎯',
    'intention': '💭',
    'design': '📐',
    'blueprint': '📋',
    'chart': '📊',
    'graph': '📈',
    'diagram': '📊',
    'image': '🖼️',
    'picture': '📷',
    'photo': '📸',
    'painting': '🎨',
    'drawing': '✏️',
    'sketch': '✏️',
    'illustration': '🎨',
    'artwork': '🎨',
    'masterpiece': '🎨',
    'creation': '✨',
    'product': '📦',
    'result': '📊',
    'outcome': '📊',
    'consequence': '📊',
    'effect': '⚡',
    'impact': '💥',
    'influence': '📈',
    'power': '⚡',
    'force': '💪',
    'strength': '💪',
    'energy': '⚡',
    'vitality': '🌟',
    'living': '🌱',
    'alive': '💚',
    'dead': '💀',
    'dying': '💀',
    'kill': '💀',
    'murder': '🔪',
    'assassinate': '🗡️',
    'eliminate': '❌',
    'destroy': '💥',
    'annihilate': '💥',
    'obliterate': '💥',
    'erase': '🧽',
    'delete': '🗑️',
    'remove': '➖',
    'subtract': '➖',
    'minus': '➖',
    'plus': '➕',
    'add': '➕',
    'addition': '➕',
    'sum': '🧮',
    'total': '🧮',
    'amount': '🔢',
    'quantity': '🔢',
    'number': '🔢',
    'count': '🔢',
    'calculate': '🧮',
    'compute': '💻',
    'operation': '⚙️',
    'function': '⚙️',
    'mechanism': '⚙️',
    'machine': '🤖',
    'device': '📱',
    'tool': '🔧',
    'instrument': '🎻',
    'equipment': '⚙️',
    'apparatus': '⚙️',
    'gadget': '📱',
    'widget': '⚙️',
    'item': '📦',
    'object': '🔲',
    'thing': '❔',
    'stuff': '📦',
    'material': '🧱',
    'substance': '⚛️',
    'matter': '⚛️',
    'particle': '⚛️',
    'atom': '⚛️',
    'molecule': '🧬',
    'cell': '🦠',
    'organism': '🦠',
    'creature': '👽',
    'being': '👤',
    'entity': '👻',
    'void': '🕳️',
    'emptiness': '⚫',
    'nothingness': '⚫',
    'zero': '0️⃣',
    'null': '⚫',
    'blank': '⬜',
    'room': '🏠',
    'area': '📐',
    'zone': '🔲',
    'region': '🗺️',
    'territory': '🗺️',
    'land': '🌍',
    'ground': '🌍',
    'world': '🌍',
    'universe': '🌌',
    'cosmos': '🌌',
    'galaxy': '🌌',
    'solar system': '☀️',
    'constellation': '✨',
    'nebula': '🌌',
    'wormhole': '🌀',
    'gateway': '🚪',
    'entrance': '🚪',
    'exit': '🚪',
    'opening': '🕳️',
    'hole': '🕳️',
    'gap': '↔️',
    'distance': '📏',
    'length': '📏',
    'width': '↔️',
    'height': '📏',
    'depth': '⬇️',
    'size': '📏',
    'scale': '⚖️',
    'proportion': '⚖️',
    'ratio': '⚖️',
    'percentage': '%',
    'fraction': '½',
    'decimal': '.',
    'point': '🔴',
    'dot': '🔴',
    'spot': '🔴',
    'mark': '✅',
    'sign': '🪧',
    'symbol': '🔣',
    'icon': '🔲',
    'logo': '🔲',
    'brand': '®️',
    'label': '🏷️',
    'tag': '🏷️',
    'name': '📛',
    'title': '📰',
    'heading': '📰',
    'caption': '📝',
    'definition': '📖',
    'interpretation': '🔍',
    'translation': '🌐',
    'version': '🔄',
    'edition': '📚',
    'copy': '📄',
    'duplicate': '👯‍♂️',
    'replica': '👯‍♂️',
    'clone': '👯‍♂️',
    'twin': '👯‍♂️',
    'double': '2️⃣',
    'pair': '👫',
    'duo': '👫',
    'squad': '👥',
    'ensemble': '🎭',
    'cast': '🎭',
    'actors': '🎭',
    'performers': '🎪',
    'artists': '🎨',
    'musicians': '🎵',
    'singers': '🎤',
    'dancers': '💃',
    'athletes': '🏃‍♂️',
    'players': '🎮',
    'gamers': '🎮',
    'competitors': '🏁',
    'participants': '🏃‍♂️',
    'contestants': '🏆',
    'candidates': '🗳️',
    'applicants': '📝',
    'students': '🎓',
    'pupils': '🎓',
    'learners': '📚',
    'scholars': '🎓',
    'academics': '🎓',
    'professors': '👨‍🏫',
    'teachers': '👩‍🏫',
    'instructors': '👨‍🏫',
    'educators': '👩‍🏫',
    'trainers': '🏃‍♂️',
    'coaches': '🏃‍♂️',
    'mentors': '👴',
    'guides': '🧭',
    'leaders': '👑',
    'managers': '👔',
    'directors': '🎬',
    'executives': '👔',
    'bosses': '👔',
    'supervisors': '👔',
    'administrators': '👔',
    'officials': '🏛️',
    'authorities': '👮‍♂️',
    'government': '🏛️',
    'politics': '🗳️',
    'democracy': '🗳️',
    'election': '🗳️',
    'vote': '🗳️',
    'ballot': '🗳️',
    'campaign': '📢',
    'candidate': '🗳️',
    'politician': '🗳️',
    'president': '🏛️',
    'minister': '🏛️',
    'senator': '🏛️',
    'representative': '🏛️',
    'congressman': '🏛️',
    'mayor': '🏛️',
    'governor': '🏛️',
    'judge': '⚖️',
    'lawyer': '⚖️',
    'attorney': '⚖️',
    'prosecutor': '⚖️',
    'defendant': '⚖️',
    'plaintiff': '⚖️',
    'witness': '👁️‍🗨️',
    'jury': '👥',
    'hearing': '👂',
    'case': '📋',
    'lawsuit': '⚖️',
    'litigation': '⚖️',
    'legal': '⚖️',
    'illegal': '🚫',
    'crime': '🚨',
    'criminal': '👮‍♂️',
    'victim': '😞',
    'perpetrator': '👮‍♂️',
    'suspect': '🤔',
    'accused': '👮‍♂️',
    'guilty': '😞',
    'verdict': '⚖️',
    'sentence': '⚖️',
    'punishment': '⚖️',
    'penalty': '⚖️',
    'fine': '💰',
    'imprisonment': '🔒',
    'jail': '🔒',
    'custody': '🔒',
    'arrest': '👮‍♂️',
    'capture': '🪤',
    'caught': '🪤',
    'trapped': '🪤',
    'escape': '🏃‍♂️',
    'flee': '🏃‍♂️',
    'run': '🏃‍♂️',
    'pursue': '🏃‍♂️',
    'find': '🔍',
    'discover': '🔍',
    'locate': '📍',
    'detect': '🔍',
    'identify': '🆔',
    'recognize': '👁️',
    'remember': '🧠',
    'recall': '🧠',
    'forget': '😵',
    'nostalgia': '😌',
    'reminiscence': '😌',
    'flashback': '⏪',
    'retrospective': '⏪',
    'contemplation': '🤔',
    'thinking': '🤔',
    'pondering': '🤔',
    'wondering': '🤔',
    'questioning': '❓',
    'doubting': '🤔',
    'believing': '🙏',
    'trusting': '🤝',
    'hoping': '🌟',
    'wishing': '🌟',
    'dreaming': '💤',
    'imagining': '💭',
    'fantasizing': '🦄',
    'daydreaming': '☁️',
    'sleeping': '😴',
    'resting': '😴',
    'relaxing': '😌',
    'peaceful': '☮️',
    'calm': '😌',
    'quiet': '🤫',
    'silent': '🤐',
    'mute': '🔇',
    'deaf': '🦻',
    'blind': '👨‍🦯',
    'disabled': '♿',
    'handicapped': '♿',
    'impaired': '♿',
    'injured': '🤕',
    'hurt': '😵',
    'pain': '😣',
    'suffering': '😖',
    'agony': '😫',
    'torture': '😫',
    'torment': '😫',
    'misery': '😞',
    'anguish': '😫',
    'distress': '😰',
    'anxiety': '😰',
    'worry': '😟',
    'concern': '😟',
    'panic': '😱',
    'hysteria': '😵‍💫',
    'madness': '🤪',
    'lunacy': '🌙',
    'psychosis': '😵‍💫',
    'neurosis': '😵‍💫',
    'disorder': '😵‍💫',
    'illness': '🤒',
    'disease': '🦠',
    'sickness': '🤒',
    'infection': '🦠',
    'parasite': '🪱',
    'poison': '☠️',
    'toxic': '☠️',
    'deadly': '💀',
    'fatal': '💀',
    'dangerous': '⚠️',
    'risky': '⚠️',
    'hazardous': '⚠️',
    'unsafe': '⚠️',
    'secure': '🔒',
    'safe': '🛡️',
    'protected': '🛡️',
    'defended': '🛡️',
    'guarded': '🛡️',
    'monitored': '📊',
    'supervised': '👀',
    'controlled': '🎛️',
    'managed': '👔',
    'directed': '🎬',
    'guided': '🧭',
    'led': '👑',
    'commanded': '👑',
    'ordered': '📋',
    'instructed': '📋',
    'taught': '👩‍🏫',
    'educated': '🎓',
    'trained': '🏃‍♂️',
    'practiced': '🎯',
    'rehearsed': '🎭',
    'prepared': '📋',
    'ready': '✅',
    'set': '⚙️',
    'go': '🚀',
    'begin': '🚀',
    'commence': '🚀',
    'initiate': '🚀',
    'launch': '🚀',
    'shoot': '🔫',
    'hit': '🎯',
    'miss': '❌',
    'fail': '❌',
    'succeed': '✅',
    'achieve': '🏆',
    'accomplish': '✅',
    'complete': '✅',
    'finish': '🏁',
    'halt': '🛑',
    'wait': '⏳',
    'delay': '⏳',
    'postpone': '📅',
    'reschedule': '📅',
    'cancel': '❌',
    'abort': '❌',
    'quit': '🚪',
    'leave': '🚪',
    'depart': '✈️',
    'move': '🚶‍♂️',
    'walk': '🚶‍♂️',
    'jump': '🦘',
    'leap': '🦘',
    'hop': '🐰',
    'skip': '⏭️',
    'swing': '🎪',
    'spin': '🌪️',
    'rotate': '🔄',
    'turn': '🔄',
    'twist': '🌪️',
    'bend': '🤸‍♂️',
    'flex': '💪',
    'stretch': '🤸‍♂️',
    'reach': '🙋‍♂️',
    'grab': '✋',
    'catch': '🤲',
    'hold': '✋',
    'grip': '✊',
    'squeeze': '✊',
    'press': '👊',
    'push': '👐',
    'pull': '🤏',
    'drag': '🚚',
    'carry': '🎒',
    'lift': '🏋️‍♂️',
    'raise': '🙋‍♂️',
    'lower': '⬇️',
    'crash': '💥',
    'collision': '💥',
    'blast': '💥',
    'boom': '💥',
    'bang': '💥',
    'pop': '🎈',
    'burst': '💥',
    'shatter': '💥',
    'smash': '💥',
    'demolish': '🏗️',
    'wreck': '🚗💥',
    'harm': '⚠️',
    'wound': '🩹',
    'cut': '🔪',
    'slash': '🗡️',
    'stab': '🗡️',
    'pierce': '🗡️',
    'penetrate': '🗡️',
    'puncture': '📌',
    'poke': '👉',
    'jab': '👊',
    'punch': '👊',
    'strike': '⚡',
    'slap': '👋',
    'smack': '👋',
    'whip': '🪚',
    'lash': '🪚',
    'pound': '🔨',
    'nail': '🔨',
    'screw': '🔩',
    'drill': '🔩',
    'saw': '🪚',
    'slice': '🔪',
    'chop': '🪓',
    'hack': '🪓',
    'disconnect': '🔌',
    'unplug': '🔌',
    'detach': '📎',
    'wipe': '🧽',
    'wash': '🧼',
    'rinse': '🚿',
    'shower': '🚿',
    'bath': '🛁',
    'soak': '🛁',
    'dip': '🛁',
    'swim': '🏊‍♂️',
    'dive': '🤿',
    'float': '🎈',
    'sink': '⬇️',
    'drown': '🌊',
    'rescue': '🆘',
    'save': '💾',
    'help': '🆘',
    'assist': '🤝',
    'support': '🤝',
    'aid': '🆘',
    'care': '❤️',
    'nurture': '🤱',
    'protect': '🛡️',
    'defend': '🛡️',
    'guard': '🛡️',
    'cover': '☂️',
    'hide': '🙈',
    'conceal': '🙈',
    'disguise': '🥸',
    'camouflage': '🦎',
    'blend': '🎨',
    'mix': '🥄',
    'combine': '➕',
    'merge': '↔️',
    'unite': '🤝',
    'join': '🔗',
    'connect': '🔗',
    'link': '🔗',
    'attach': '📎',
    'bind': '🪢',
    'knot': '🪢',
    'wrap': '🎁',
    'package': '📦',
    'box': '📦',
    'container': '🗃️',
    'vessel': '🚢',
    'bottle': '🍼',
    'jar': '🫙',
    'can': '🥫',
    'bucket': '🪣',
    'basket': '🧺',
    'bag': '👜',
    'suitcase': '🧳',
    'luggage': '🧳',
    'backpack': '🎒',
    'purse': '👛',
    'wallet': '👛',
    'pocket': '👖',
    'clothes': '👕',
    'clothing': '👗',
    'dress': '👗',
    'shirt': '👕',
    'pants': '👖',
    'jeans': '👖',
    'shorts': '🩳',
    'skirt': '👗',
    'jacket': '🧥',
    'coat': '🧥',
    'sweater': '🧶',
    'hoodie': '🧥',
    'hat': '🎩',
    'cap': '🧢',
    'helmet': '⛑️',
    'shoes': '👟',
    'boots': '🥾',
    'sandals': '👡',
    'socks': '🧦',
    'gloves': '🧤',
    'mittens': '🧤',
    'scarf': '🧣',
    'tie': '👔',
    'belt': '👗',
    'glasses': '👓',
    'sunglasses': '🕶️',
    'makeup': '💄',
    'lipstick': '💄',
    'perfume': '💐',
    'cologne': '💐',
    'deodorant': '🚿',
    'soap': '🧼',
    'shampoo': '🧴',
    'toothbrush': '🪥',
    'toothpaste': '🦷',
    'comb': '💇‍♀️',
    'brush': '🪥',
    'towel': '🏖️',
    'tissue': '🧻',
    'toilet paper': '🧻',
    'napkin': '🧻',
    'plate': '🍽️',
    'bowl': '🥣',
    'cup': '☕',
    'mug': '☕',
    'glass': '🥛',
    'fork': '🍴',
    'spoon': '🥄',
    'chopsticks': '🥢',
    'cooking': '👨‍🍳',
    'baking': '👨‍🍳',
    'eating': '🍽️',
    'drinking': '🥤',
    'food': '🍕',
    'meal': '🍽️',
    'breakfast': '🥞',
    'lunch': '🥪',
    'dinner': '🍽️',
    'snack': '🍪',
    'dessert': '🍰',
    'pie': '🥧',
    'cookie': '🍪',
    'candy': '🍬',
    'chocolate': '🍫',
    'ice cream': '🍦',
    'fruit': '🍎',
    'apple': '🍎',
    'banana': '🍌',
    'orange': '🍊',
    'grape': '🍇',
    'strawberry': '🍓',
    'cherry': '🍒',
    'peach': '🍑',
    'pear': '🍐',
    'pineapple': '🍍',
    'watermelon': '🍉',
    'lemon': '🍋',
    'lime': '🍋',
    'coconut': '🥥',
    'avocado': '🥑',
    'tomato': '🍅',
    'potato': '🥔',
    'carrot': '🥕',
    'corn': '🌽',
    'pepper': '🌶️',
    'onion': '🧅',
    'garlic': '🧄',
    'mushroom': '🍄',
    'broccoli': '🥦',
    'lettuce': '🥬',
    'cabbage': '🥬',
    'spinach': '🥬',
    'celery': '🥬',
    'cucumber': '🥒',
    'pickle': '🥒',
    'bread': '🍞',
    'toast': '🍞',
    'sandwich': '🥪',
    'burger': '🍔',
    'hot dog': '🌭',
    'pizza': '🍕',
    'pasta': '🍝',
    'noodles': '🍜',
    'soup': '🍲',
    'salad': '🥗',
    'rice': '🍚',
    'beans': '🫘',
    'nuts': '🥜',
    'seeds': '🌰',
    'egg': '🥚',
    'chicken': '🍗',
    'beef': '🥩',
    'pork': '🥓',
    'fish': '🐟',
    'shrimp': '🦐',
    'crab': '🦀',
    'lobster': '🦞',
    'cheese': '🧀',
    'milk': '🥛',
    'butter': '🧈',
    'yogurt': '🥛',
    'cream': '🥛',
    'oil': '🫒',
    'salt': '🧂',
    'sugar': '🍯',
    'honey': '🍯',
    'spice': '🌶️',
    'herb': '🌿',
    'tea': '🍵',
    'coffee': '☕',
    'water': '💧',
    'juice': '🧃',
    'soda': '🥤',
    'beer': '🍺',
    'wine': '🍷',
    'champagne': '🍾',
    'cocktail': '🍸',
    'whiskey': '🥃',
    'vodka': '🍸',
    'rum': '🍹',
    'tequila': '🍹',
    'gin': '🍸',
    'brandy': '🥃',
    'liquor': '🍾',
    'alcohol': '🍺',
    'drunk': '🥴',
    'intoxicated': '🥴',
    'hangover': '🤕',
    'celebration': '🎊',
    'festival': '🎪',
    'carnival': '🎡',
    'fair': '🎠',
    'concert': '🎵',
    'theater': '🎭',
    'cinema': '🎬',
    'movie': '🎬',
    'film': '🎞️',
    'video': '📹',
    'television': '📺',
    'radio': '📻',
    'song': '🎶',
    'album': '💿',
    'track': '🎵',
    'melody': '🎼',
    'harmony': '🎼',
    'drums': '🥁',
    'violin': '🎻',
    'trumpet': '🎺',
    'saxophone': '🎷',
    'flute': '🪈',
    'microphone': '🎤',
    'speaker': '🔊',
    'headphones': '🎧',
    'earbuds': '🎧',
    'sound': '🔊',
    'noise': '🔊',
    'loud': '🔊',
    'volume': '🔊',
    'bass': '🎵',
    'treble': '🎵',
    'pitch': '🎵',
    'tone': '🎵',
    'voice': '🗣️',
    'humming': '🎵',
    'whistling': '🎵',
    'talking': '🗣️',
    'speaking': '🗣️',
    'chat': '💬',
    'monologue': '🗣️',
    'speech': '🗣️',
    'lecture': '👨‍🏫',
    'report': '📋',
    'news': '📰',
    'information': 'ℹ️',
    'data': '📊',
    'facts': '📝',
    'details': '🔍',
    'specifics': '🔍',
    'particulars': '📝',
    'features': '⭐',
    'characteristics': '📋',
    'properties': '🏠',
    'attributes': '📋',
    'qualities': '💎',
    'traits': '📋',
    'aspects': '🔍',
    'elements': '⚛️',
    'components': '🧩',
    'parts': '🧩',
    'pieces': '🧩',
    'fragments': '🧩',
    'sections': '📋',
    'segments': '📊',
    'portions': '🍰',
    'shares': '🤝',
    'fractions': '½',
    'percentages': '%',
    'ratios': '⚖️',
    'proportions': '⚖️',
    'scales': '⚖️',
    'sizes': '📏',
    'dimensions': '📐',
    'measurements': '📏',
    'distances': '📏',
    'lengths': '📏',
    'widths': '↔️',
    'heights': '📏',
    'depths': '⬇️',
    'thickness': '📏',
    'weight': '⚖️',
    'mass': '⚖️',
    'density': '⚖️',
    'capacity': '🪣',
    'surface': '🏄‍♂️',
    'texture': '🖐️',
    'feel': '🖐️',
    'touch': '👋',
    'sensation': '🖐️',
    'feeling': '❤️',
    'emotion': '😊',
    'mood': '😊',
    'attitude': '😎',
    'behavior': '🚶‍♂️',
    'course': '🧭',
    'trip': '✈️',
    'leisure': '🏖️',
    'recreation': '🎮',
    'entertainment': '🎪',
    'fun': '😄',
    'enjoyment': '😊',
    'pleasure': '😊',
    'happiness': '😊',
    'joy': '😄',
    'delight': '😊',
    'satisfaction': '😌',
    'contentment': '😌',
    'serenity': '😌',
    'tranquility': '😌',
    'stillness': '🧘‍♂️',
    'motionless': '🧘‍♂️',
    'stationary': '🚏',
    'fixed': '🔒',
    'stable': '⚖️',
    'steady': '⚖️',
    'constant': '♾️',
    'consistent': '📊',
    'regular': '📊',
    'normal': '😐',
    'ordinary': '😐',
    'common': '😐',
    'usual': '😐',
    'typical': '😐',
    'standard': '📏',
    'average': '📊',
    'medium': '📊',
    'moderate': '⚖️',
    'mild': '😌',
    'gentle': '😌',
    'soft': '🥰',
    'tender': '❤️',
    'delicate': '🌸',
    'fragile': '🥚',
    'brittle': '🍂',
    'feeble': '😵',
    'frail': '👴',
    'vulnerable': '😟',
    'sensitive': '😢',
    'sentimental': '🥺',
    'intense': '🔥',
    'extreme': '🔥',
    'radical': '⚡',
    'dramatic': '🎭',
    'theatrical': '🎭',
    'spectacular': '🎆',
    'amazing': '🤩',
    'incredible': '🤯',
    'unbelievable': '🤯',
    'fantastic': '🌟',
    'wonderful': '🌟',
    'marvelous': '✨',
    'excellent': '👌',
    'outstanding': '🌟',
    'exceptional': '⭐',
    'extraordinary': '✨',
    'remarkable': '⭐',
    'impressive': '😮',
    'stunning': '😍',
    'breathtaking': '😮‍💨',
    'gorgeous': '😍',
    'beautiful': '😍',
    'pretty': '😊',
    'attractive': '😍',
    'appealing': '😊',
    'charming': '😊',
    'lovely': '🥰',
    'cute': '🥰',
    'adorable': '🥰',
    'sweet': '🍯',
    'nice': '😊',
    'pleasant': '😊',
    'agreeable': '👍',
    'likable': '👍',
    'friendly': '😊',
    'kind': '🥰',
    'caring': '❤️',
    'compassionate': '❤️',
    'sympathetic': '🤗',
    'patient': '😌',
    'tolerant': '🤝',
    'forgiving': '🤗',
    'merciful': '😇',
    'generous': '🤲',
    'giving': '🎁',
    'charitable': '❤️',
    'helpful': '🤝',
    'supportive': '🤝',
    'encouraging': '💪',
    'motivating': '💪',
    'inspiring': '✨',
    'uplifting': '⬆️',
    'positive': '➕',
    'optimistic': '😊',
    'hopeful': '🌟',
    'confident': '💪',
    'brave': '🦁',
    'courageous': '🛡️',
    'bold': '💪',
    'daring': '🚀',
    'adventurous': '🗺️',
    'fearless': '🦁',
    'heroic': '🦸‍♂️',
    'noble': '👑',
    'honorable': '🏅',
    'righteous': '⚖️',
    'moral': '😇',
    'ethical': '⚖️',
    'virtuous': '😇',
    'good': '👍',
    'fresh': '🌱',
    'current': '⏯️',
    'recent': '📅',
    'latest': '🆕',
    'updated': '🔄',
    'revised': '📝',
    'rigorous': '💪',
    'strict': '📏',
    'severe': '😠',
    'harsh': '😠',
    'cruel': '😈',
    'mean': '😠',
    'nasty': '🤢',
    'unpleasant': '😞',
    'disagreeable': '👎',
    'annoying': '😤',
    'irritating': '😤',
    'frustrating': '😤',
    'aggravating': '😡',
    'infuriating': '🤬',
    'maddening': '🤬',
    'enraging': '😡',
    'angering': '😡',
    'upsetting': '😢',
    'disturbing': '😟',
    'troubling': '😟',
    'worrying': '😟',
    'concerning': '😟',
    'alarming': '🚨',
    'frightening': '😱',
    'scary': '😱',
    'terrifying': '😱',
    'horrifying': '😱',
    'shocking': '😲',
    'surprising': '😲',
    'unexpected': '😲',
    'sudden': '⚡',
    'abrupt': '⚡',
    'quick': '⚡',
    'rapid': '💨',
    'swift': '💨',
    'speedy': '💨',
    'hasty': '💨',
    'hurried': '💨',
    'rushed': '💨',
    'immediate': '⚡',
    'prompt': '⚡',
    'timely': '⏰',
    'punctual': '⏰',
    'on time': '⏰',
    'early': '⏰',
    'late': '⏰',
    'delayed': '⏳',
    'sluggish': '🐌',
    'lazy': '😴',
    'idle': '😴',
    'inactive': '😴',
    'passive': '😐',
    'static': '🧘‍♂️',
    'still': '🧘‍♂️',
    'frozen': '🧊',
    'cold': '🥶',
    'freezing': '🧊',
    'icy': '🧊',
    'chilly': '🥶',
    'cool': '😎',
    'warm': '😊',
    'hot': '🔥',
    'burning': '🔥',
    'blazing': '🔥',
    'scorching': '🔥',
    'boiling': '♨️',
    'steaming': '♨️',
    'smoking': '🚬',
    'flame': '🔥',
    'spark': '✨',
    'light': '💡',
    'bright': '☀️',
    'shining': '✨',
    'glowing': '✨',
    'sparkling': '✨',
    'twinkling': '✨',
    'flickering': '🕯️',
    'flashing': '⚡',
    'blinking': '🔴',
    'dark': '🌑',
    'dim': '🔅',
    'shadowy': '👥',
    'gloomy': '☁️',
    'murky': '🌫️',
    'cloudy': '☁️',
    'foggy': '🌫️',
    'misty': '🌫️',
    'hazy': '🌫️',
    'blurry': '😵‍💫',
    'unclear': '❓',
    'vague': '❓',
    'ambiguous': '❓',
    'confusing': '😕',
    'puzzling': '🧩',
    'mysterious': '❓',
    'enigmatic': '❓',
    'cryptic': '🔐',
    'hidden': '🙈',
    'private': '🔒',
    'personal': '👤',
    'special': '⭐',
    'rare': '💎',
    'uncommon': '💎',
    'unusual': '🤔',
    'strange': '🤔',
    'odd': '🤔',
    'weird': '🤪',
    'bizarre': '🤪',
    'peculiar': '🤔',
    'curious': '🤔',
    'interesting': '🤔',
    'fascinating': '🤩',
    'intriguing': '🤔',
    'captivating': '😍',
    'engaging': '😊',
    'entertaining': '🎪',
    'amusing': '😄',
    'funny': '😂',
    'hilarious': '🤣',
    'comical': '😄',
    'humorous': '😄',
    'witty': '😏',
    'intelligent': '🧠',
    'wise': '🦉',
    'knowledgeable': '📚',
    'learned': '📚',
    'scholarly': '🎓',
    'academic': '🎓',
    'intellectual': '🧠',
    'cultured': '🎭',
    'refined': '🎩',
    'elegant': '💃',
    'graceful': '🦢',
    'stylish': '😎',
    'fashionable': '👗',
    'trendy': '📈',
    'popular': '⭐',
    'famous': '⭐',
    'well-known': '⭐',
    'renowned': '⭐',
    'celebrated': '🎉',
    'acclaimed': '👏',
    'praised': '👏',
    'admired': '😍',
    'respected': '🤝',
    'honored': '🏅',
    'valued': '💎',
    'treasured': '💎',
    'cherished': '❤️',
    'beloved': '💕',
    'dear': '💕',
    'precious': '💎',
    'priceless': '💰',
    'valuable': '💰',
    'worthwhile': '💰',
    'useful': '🔧',
    'functional': '⚙️',
    'effective': '✅',
    'efficient': '⚡',
    'productive': '📈',
    'successful': '🏆',
    'victorious': '🏆',
    'triumphant': '🏆',
    'winning': '🥇',
    'master': '🥋',
    'teacher': '👩‍🏫',
    'instructor': '👨‍🏫',
    'professor': '👨‍🏫',
    'educator': '👩‍🏫',
    'trainer': '🏃‍♂️',
    'coach': '🏃‍♂️',
    'mentor': '👴',
    'guide': '🧭',
    'advisor': '💡',
    'counselor': '💭',
    'consultant': '💼',
    'helper': '🤝',
    'assistant': '🤝',
    'supporter': '🤝',
    'ally': '🤝',
    'companion': '👫',
    'partner': '🤝',
    'teammate': '👥',
    'colleague': '👥',
    'coworker': '👥',
    'associate': '👥',
    'member': '👥',
    'participant': '🏃‍♂️',
    'player': '🎮',
    'actor': '🎭',
    'performer': '🎪',
    'artist': '🎨',
    'creator': '✨',
    'maker': '🔨',
    'builder': '🏗️',
    'designer': '📐',
    'architect': '🏗️',
    'engineer': '⚙️',
    'inventor': '💡',
    'innovator': '💡',
    'pioneer': '🚀',
    'explorer': '🗺️',
    'adventurer': '🗺️',
    'traveler': '✈️',
    'tourist': '📷',
    'visitor': '👋',
    'guest': '🏠',
    'stranger': '❓',
    'outsider': '🚪',
    'foreigner': '🌍',
    'immigrant': '✈️',
    'refugee': '🏠',
    'exile': '🚪',
    'outcast': '😞',
    'loner': '🏝️',
    'hermit': '🏝️',
    'recluse': '🏠',
    'introvert': '🤐',
    'extrovert': '🗣️',
    'social': '👥',
    'outgoing': '👋',
    'talkative': '🗣️',
    'chatty': '💬',
    'communicative': '📞',
    'expressive': '🎭',
    'articulate': '🗣️',
    'eloquent': '🎭',
    'persuasive': '🤝',
    'convincing': '👍',
    'influential': '📈',
    'powerful': '💪',
    'mighty': '💪',
    'forceful': '💥',
    'dominant': '👑',
    'controlling': '🎛️',
    'commanding': '👑',
    'authoritative': '👮‍♂️',
    'bossy': '👔',
    'firm': '💪',
    'rigid': '🔒',
    'inflexible': '🔒',
    'stubborn': '🐐',
    'obstinate': '🐐',
    'headstrong': '🐂',
    'willful': '💪',
    'determined': '💪',
    'persistent': '🐜',
    'tenacious': '🦾',
    'resilient': '🌱',
    'hardy': '🌲',
    'durable': '🔧',
    'lasting': '♾️',
    'permanent': '♾️',
    'eternal': '♾️',
    'everlasting': '♾️',
    'endless': '♾️',
    'infinite': '♾️',
    'limitless': '♾️',
    'boundless': '🌌',
    'unlimited': '♾️',
    'unrestricted': '🗽',
    'free': '🗽',
    'independent': '🗽',
    'autonomous': '🤖',
    'self-reliant': '💪',
    'self-sufficient': '🏠',
    'confidential': '🔒',
    'classified': '📋',
    'top secret': '🔐',
    'restricted': '🚫',
    'forbidden': '🚫',
    'prohibited': '🚫',
    'banned': '🚫',
    'unlawful': '⚖️',
    'honest': '😇',
    'truthful': '✅',
    'sincere': '💯',
    'authentic': '✅',
    'real': '✅',
    'actual': '✅',
    'true': '✅',
    'correct': '✅',
    'right': '✅',
    'accurate': '🎯',
    'precise': '🎯',
    'exact': '🎯',
    'perfect': '💯',
    'flawless': '💎',
    'ideal': '⭐',
    'superb': '🌟',
    'magnificent': '👑',
    'awesome': '🤩',
    'rad': '😎',
    'wicked': '😈',
    'terrible': '😞',
    'awful': '😞',
    'horrible': '😞',
    'dreadful': '😞',
    'ghastly': '👻',
    'hideous': '🤢',
    'repulsive': '🤢',
    'revolting': '🤮',
    'sickening': '🤢',
    'nauseating': '🤢',
    'yucky': '🤢',
    'foul': '🤢',
    'filthy': '🤢',
    'grimy': '🤢',
    'muddy': '🤢',
    'dusty': '🌪️',
    'sandy': '🏖️',
    'rocky': '🪨',
    'stony': '🪨',
    'solid': '🧱',
    'sheltered': '🏠',
    'transparent': '👻',
    'clear': '🔍',
    'obvious': '💡',
    'evident': '👁️',
    'apparent': '👁️',
    'visible': '👀',
    'noticeable': '👀',
    'distinct': '🔍',
    'prominent': '⭐',
    'notable': '⭐',
    'significant': '❗',
    'major': '❗',
    'main': '⭐',
    'primary': '1️⃣',
    'principal': '👑',
    'leading': '👑',
    'top': '🔝',
    'best': '🥇',
    'finest': '💎',
    'supreme': '👑',
    'ultimate': '🏆',
    'maximum': '📈',
    'peak': '🏔️',
    'summit': '🏔️',
    'apex': '🔝',
    'zenith': '⭐',
    'climax': '🎆',
    'pinnacle': '🏔️',
    'crest': '🌊',
    'ridge': '🏔️',
    'edge': '🔪',
    'boundary': '🚧',
    'limit': '🚫',
  };

  @override
  void initState() {
    super.initState();
    
    _scoreController = AnimationController(
      duration: const Duration(milliseconds: 300),
      vsync: this,
    );
    _emojiController = AnimationController(
      duration: const Duration(milliseconds: 500),
      vsync: this,
    );
    
    _scoreAnimation = Tween<double>(begin: 1.0, end: 1.2).animate(
      CurvedAnimation(parent: _scoreController, curve: Curves.elasticOut),
    );
    _emojiAnimation = Tween<double>(begin: 1.0, end: 1.1).animate(
      CurvedAnimation(parent: _emojiController, curve: Curves.easeInOut),
    );
    
    _generateGameMovies();
  }

  @override
  void dispose() {
    _scoreController.dispose();
    _emojiController.dispose();
    super.dispose();
  }

  void _generateGameMovies() {
    // Filter movies that have good emoji potential
    final eligibleMovies = widget.movies.where((movie) {
      // Must have at least 2 genres and some tags for good emoji combinations
      return movie.genres.length >= 2 && 
             movie.tags.isNotEmpty &&
             movie.title.length <= 35;
    }).toList();
    
    eligibleMovies.shuffle();
    gameMovies = eligibleMovies.take(10).toList(); 
  }

  String _generateEmojisForMovie(Movie movie) {
    final emojis = <String>[];
    
    
    for (final genre in movie.genres.take(2)) {
      final emoji = genreEmojis[genre];
      if (emoji != null) emojis.add(emoji);
    }
    
   
    final priorityTags = ['zombie', 'portal', 'love', 'magic', 'robot', 'alien', 
                          'dragon', 'superhero', 'spy', 'pirate', 'vampire', 'ghost',
                          'space', 'ocean', 'fire', 'explosion', 'treasure', 'family'];
    
    
    for (final tag in movie.tags) {
      if (emojis.length >= 4) break;
      if (priorityTags.contains(tag.toLowerCase())) {
        final emoji = tagEmojis[tag.toLowerCase()];
        if (emoji != null && !emojis.contains(emoji)) {
          emojis.add(emoji);
        }
      }
    }
    
    // Then try other tags
    for (final tag in movie.tags) {
      if (emojis.length >= 4) break;
      final emoji = tagEmojis[tag.toLowerCase()];
      if (emoji != null && !emojis.contains(emoji)) {
        emojis.add(emoji);
      }
    }
    
    // Ensure we have at least 3 emojis, add generic ones if needed
    if (emojis.length < 3) {
      final genericEmojis = ['🎬', '🍿', '📽️', '⭐'];
      for (final generic in genericEmojis) {
        if (emojis.length >= 3) break;
        if (!emojis.contains(generic)) emojis.add(generic);
      }
    }
    
    return emojis.take(4).join(' ');
  }

  List<String> _generateAnswerChoices(Movie correctMovie) {
    final choices = <String>[correctMovie.title];
    final otherMovies = widget.movies.where((m) => m.id != correctMovie.id).toList();
    otherMovies.shuffle();
    
    // Add 3 similar movies as wrong answers (preferably same genre)
    int added = 0;
    for (final movie in otherMovies) {
      if (added >= 3) break;
      
      // Prefer movies with overlapping genres for better difficulty
      final hasOverlapGenre = movie.genres.any((g) => correctMovie.genres.contains(g));
      if (hasOverlapGenre || added >= 1) { // Ensure at least some variety
        choices.add(movie.title);
        added++;
      }
    }
    
    // If we still need more, add any movies
    while (choices.length < 4 && choices.length < otherMovies.length + 1) {
      final randomMovie = otherMovies[Random().nextInt(otherMovies.length)];
      if (!choices.contains(randomMovie.title)) {
        choices.add(randomMovie.title);
      }
    }
    
    choices.shuffle();
    return choices;
  }

  void _answerQuestion(String answer) {
    if (hasAnswered) return;
    
    setState(() {
      hasAnswered = true;
      selectedAnswer = answer;
      isCorrect = answer == gameMovies[currentQuestionIndex].title;
      
      if (isCorrect) {
        score += 10;
        streak++;
        _scoreController.forward().then((_) => _scoreController.reverse());
      } else {
        streak = 0;
      }
    });
    
    // Auto advance after 2 seconds
    Future.delayed(const Duration(seconds: 2), () {
      _nextQuestion();
    });
  }

  void _nextQuestion() {
    if (currentQuestionIndex < gameMovies.length - 1) {
      setState(() {
        currentQuestionIndex++;
        hasAnswered = false;
        isCorrect = false;
        selectedAnswer = '';
      });
      _emojiController.forward().then((_) => _emojiController.reverse());
    } else {
      _showGameResults();
    }
  }

  void _showGameResults() {
    final percentage = (score / (gameMovies.length * 10) * 100).round();
    
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (context) => AlertDialog(
        backgroundColor: const Color(0xFF1F1F1F),
        title: Text(
          '🎉 Game Complete!',
          style: TextStyle(color: Colors.white, fontSize: 24.sp),
          textAlign: TextAlign.center,
        ),
        content: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            Text(
              'Your Score: $score/${gameMovies.length * 10}',
              style: TextStyle(
                color: const Color(0xFFE5A00D),
                fontSize: 20.sp,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: 8.h),
            Text(
              '$percentage% Correct',
              style: TextStyle(color: Colors.white, fontSize: 16.sp),
            ),
            SizedBox(height: 16.h),
            Text(
              _getResultMessage(percentage),
              style: TextStyle(color: Colors.white70, fontSize: 14.sp),
              textAlign: TextAlign.center,
            ),
          ],
        ),
        actions: [
          TextButton(
            onPressed: () {
              Navigator.pop(context);
              _resetGame();
            },
            child: Text(
              'Play Again',
              style: TextStyle(color: const Color(0xFFE5A00D), fontSize: 16.sp),
            ),
          ),
          TextButton(
            onPressed: () {
              Navigator.pop(context);
              widget.onExit?.call();
            },
            child: Text(
              'Exit',
              style: TextStyle(color: Colors.grey, fontSize: 16.sp),
            ),
          ),
        ],
      ),
    );
  }

  String _getResultMessage(int percentage) {
    if (percentage >= 90) return "🏆 Emoji Master! You're a movie genius!";
    if (percentage >= 70) return "⭐ Great job! You know your movies!";
    if (percentage >= 50) return "👍 Not bad! Keep watching more films!";
    return "🎬 Room for improvement! Time for a movie marathon!";
  }

  void _resetGame() {
    setState(() {
      currentQuestionIndex = 0;
      score = 0;
      streak = 0;
      hasAnswered = false;
      isCorrect = false;
      selectedAnswer = '';
    });
    _generateGameMovies();
  }

  @override
  Widget build(BuildContext context) {
    if (gameMovies.isEmpty) {
      return Scaffold(
        backgroundColor: const Color(0xFF121212),
        body: Center(
          child: CircularProgressIndicator(color: const Color(0xFFE5A00D)),
        ),
      );
    }

    final currentMovie = gameMovies[currentQuestionIndex];
    final emojis = _generateEmojisForMovie(currentMovie);
    final choices = _generateAnswerChoices(currentMovie);

    return Scaffold(
      backgroundColor: const Color(0xFF121212),
      body: SafeArea(
        child: Padding(
          padding: EdgeInsets.all(20.w),
          child: Column(
            children: [
              // Header with score and progress
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  // Back button
                  IconButton(
                    onPressed: widget.onExit,
                    icon: Icon(Icons.arrow_back, color: Colors.white, size: 24.sp),
                  ),
                  
                  // Progress
                  Text(
                    '${currentQuestionIndex + 1}/${gameMovies.length}',
                    style: TextStyle(color: Colors.white70, fontSize: 16.sp),
                  ),
                  
                  // Score
                  AnimatedBuilder(
                    animation: _scoreAnimation,
                    builder: (context, child) {
                      return Transform.scale(
                        scale: _scoreAnimation.value,
                        child: Container(
                          padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 6.h),
                          decoration: BoxDecoration(
                            color: const Color(0xFFE5A00D),
                            borderRadius: BorderRadius.circular(20.r),
                          ),
                          child: Text(
                            'Score: $score',
                            style: TextStyle(
                              color: Colors.black,
                              fontSize: 14.sp,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                        ),
                      );
                    },
                  ),
                ],
              ),
              
              SizedBox(height: 20.h),
              
              // Progress bar
              LinearProgressIndicator(
                value: (currentQuestionIndex + 1) / gameMovies.length,
                backgroundColor: Colors.grey[800],
                valueColor: AlwaysStoppedAnimation<Color>(const Color(0xFFE5A00D)),
              ),
              
              SizedBox(height: 40.h),
              
              // Question
              Text(
                'Guess the Movie!',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 24.sp,
                  fontWeight: FontWeight.bold,
                ),
                textAlign: TextAlign.center,
              ),
              
              SizedBox(height: 40.h),
              
              // Emoji display
              AnimatedBuilder(
                animation: _emojiAnimation,
                builder: (context, child) {
                  return Transform.scale(
                    scale: _emojiAnimation.value,
                    child: Container(
                      padding: EdgeInsets.all(30.w),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          colors: [
                            const Color(0xFF2A2A2A),
                            const Color(0xFF1F1F1F),
                          ],
                        ),
                        borderRadius: BorderRadius.circular(20.r),
                        border: Border.all(
                          color: const Color(0xFFE5A00D).withValues(alpha: 0.3),
                          width: 2.w,
                        ),
                      ),
                      child: Text(
                        emojis,
                        style: TextStyle(fontSize: 48.sp),
                        textAlign: TextAlign.center,
                      ),
                    ),
                  );
                },
              ),
              
              SizedBox(height: 40.h),
              
              // Answer choices
              Expanded(
                child: ListView.builder(
                  itemCount: choices.length,
                  itemBuilder: (context, index) {
                    final choice = choices[index];
                    final isSelected = selectedAnswer == choice;
                    final isCorrectAnswer = choice == currentMovie.title;
                    
                    Color backgroundColor = const Color(0xFF2A2A2A);
                    Color borderColor = Colors.grey.withValues(alpha: 0.3);
                    Color textColor = Colors.white;
                    
                    if (hasAnswered) {
                      if (isSelected && isCorrectAnswer) {
                        backgroundColor = Colors.green.withValues(alpha: 0.2);
                        borderColor = Colors.green;
                        textColor = Colors.green;
                      } else if (isSelected && !isCorrectAnswer) {
                        backgroundColor = Colors.red.withValues(alpha: 0.2);
                        borderColor = Colors.red;
                        textColor = Colors.red;
                      } else if (isCorrectAnswer) {
                        backgroundColor = Colors.green.withValues(alpha: 0.1);
                        borderColor = Colors.green.withValues(alpha: 0.5);
                        textColor = Colors.green;
                      }
                    }
                    
                    return Container(
                      margin: EdgeInsets.only(bottom: 12.h),
                      child: GestureDetector(
                        onTap: hasAnswered ? null : () => _answerQuestion(choice),
                        child: AnimatedContainer(
                          duration: const Duration(milliseconds: 200),
                          padding: EdgeInsets.all(16.w),
                          decoration: BoxDecoration(
                            color: backgroundColor,
                            borderRadius: BorderRadius.circular(12.r),
                            border: Border.all(color: borderColor, width: 2.w),
                          ),
                          child: Row(
                            children: [
                              Container(
                                width: 24.w,
                                height: 24.h,
                                decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                  border: Border.all(color: borderColor, width: 2.w),
                                  color: isSelected ? borderColor : Colors.transparent,
                                ),
                                child: isSelected
                                    ? Icon(
                                        isCorrectAnswer ? Icons.check : Icons.close,
                                        color: Colors.white,
                                        size: 16.sp,
                                      )
                                    : null,
                              ),
                              SizedBox(width: 12.w),
                              Expanded(
                                child: Text(
                                  choice,
                                  style: TextStyle(
                                    color: textColor,
                                    fontSize: 16.sp,
                                    fontWeight: FontWeight.w600,
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    );
                  },
                ),
              ),
              
              // Streak indicator
              if (streak > 1)
                Container(
                  padding: EdgeInsets.symmetric(horizontal: 16.w, vertical: 8.h),
                  decoration: BoxDecoration(
                    color: Colors.orange.withValues(alpha: 0.2),
                    borderRadius: BorderRadius.circular(20.r),
                    border: Border.all(color: Colors.orange),
                  ),
                  child: Text(
                    '🔥 ${streak}x Streak!',
                    style: TextStyle(
                      color: Colors.orange,
                      fontSize: 14.sp,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
            ],
          ),
        ),
      ),
    );
  }
}