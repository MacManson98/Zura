workflows:
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: CodeMagic Integration
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.zura.app
      vars:
        BUNDLE_ID: "com.zura.app"
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      
      - name: Create Firebase configuration
        script: |
          echo "üî• Creating Firebase configuration..."
          
          # Create the file directly from your content
          cat > ios/Runner/GoogleService-Info.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CLIENT_ID</key>
              <string>173034299087-ldk8k2rhifd6sdbvm0ac8kgsej9h4uq2.apps.googleusercontent.com</string>
              <key>REVERSED_CLIENT_ID</key>
              <string>com.googleusercontent.apps.173034299087-ldk8k2rhifd6sdbvm0ac8kgsej9h4uq2</string>
              <key>API_KEY</key>
              <string>AIzaSyDyslqduejJ35SuAO7TEP4fJ40CQXdunkU</string>
              <key>GCM_SENDER_ID</key>
              <string>173034299087</string>
              <key>PLIST_VERSION</key>
              <string>1</string>
              <key>BUNDLE_ID</key>
              <string>com.zura.app</string>
              <key>PROJECT_ID</key>
              <string>reel-match-e7729</string>
              <key>STORAGE_BUCKET</key>
              <string>reel-match-e7729.firebasestorage.app</string>
              <key>GOOGLE_APP_ID</key>
              <string>1:173034299087:ios:1dd69486e75fdd475ee1ba</string>
              <key>IS_ADS_ENABLED</key>
              <false/>
              <key>IS_ANALYTICS_ENABLED</key>
              <false/>
              <key>IS_APPINVITE_ENABLED</key>
              <true/>
              <key>IS_GCM_ENABLED</key>
              <true/>
              <key>IS_SIGNIN_ENABLED</key>
              <true/>
              <key>CFBundleURLTypes</key>
              <array>
                  <dict>
                      <key>CFBundleURLName</key>
                      <string>google</string>
                      <key>CFBundleURLSchemes</key>
                      <array>
                          <string>com.googleusercontent.apps.173034299087-ldk8k2rhifd6sdbvm0ac8kgsej9h4uq2</string>
                      </array>
                  </dict>
              </array>
          </dict>
          </plist>
          EOF
          
          echo "‚úÖ GoogleService-Info.plist created"
          ls -la ios/Runner/GoogleService-Info.plist
          
          # NEW: Force integration into Xcode project
          echo "üîß Integrating GoogleService-Info.plist into Xcode project..."
          
          PBXPROJ_FILE="ios/Runner.xcodeproj/project.pbxproj"
          
          # Check if already integrated
          if grep -q "GoogleService-Info.plist" "$PBXPROJ_FILE"; then
            echo "‚úÖ File already integrated in project"
          else
            echo "üìù Adding file reference to Xcode project..."
            
            # Generate unique IDs for the file reference
            FILE_REF_ID="97C146F01CF9000F007C117D"
            BUILD_FILE_ID="97C146F11CF9000F007C117D"
            
            # Add file reference
            sed -i.bak "/\/\* End PBXFileReference section \*\//i\\
            \\		${FILE_REF_ID} /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = \"GoogleService-Info.plist\"; sourceTree = \"<group>\"; };\\
            " "$PBXPROJ_FILE"
            
            # Add to Runner group
            sed -i.bak "/Runner\/Info.plist.*,/a\\
            \\				${FILE_REF_ID} /* GoogleService-Info.plist */,\\
            " "$PBXPROJ_FILE"
            
            # Add build file reference
            sed -i.bak "/\/\* End PBXBuildFile section \*\//i\\
            \\		${BUILD_FILE_ID} /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = ${FILE_REF_ID} /* GoogleService-Info.plist */; };\\
            " "$PBXPROJ_FILE"
            
            # Add to Copy Bundle Resources
            sed -i.bak "/\/\* LaunchScreen.storyboard in Resources \*\/,/a\\
            \\				${BUILD_FILE_ID} /* GoogleService-Info.plist in Resources */,\\
            " "$PBXPROJ_FILE"
            
            # Clean up backup
            rm -f "${PBXPROJ_FILE}.bak"
            
            echo "‚úÖ File successfully integrated into Xcode project"
          fi
          
          # Verify integration
          if grep -q "GoogleService-Info.plist.*Resources" "$PBXPROJ_FILE"; then
            echo "‚úÖ File will be bundled into app"
          else
            echo "‚ùå File integration may have failed"
          fi
          
          # Final verification
          if grep -q "reel-match-e7729" ios/Runner/GoogleService-Info.plist; then
            echo "‚úÖ File contains correct project ID"
          else
            echo "‚ùå File verification failed"
            exit 1
          fi
      
      - name: Get Flutter dependencies
        script: |
          echo "üì¶ Getting Flutter dependencies..."
          flutter clean
          flutter pub get

      - name: Install iOS dependencies
        script: |
          echo "üçé Installing iOS dependencies..."
          cd ios && pod install
      
      - name: Build iOS app
        script: |
          echo "üèóÔ∏è Building iOS app..."
          flutter build ios --release
      
      - name: Build iOS IPA
        script: |
          echo "üì¶ Creating IPA..."
          xcode-project build-ipa \
            --workspace ios/$XCODE_WORKSPACE \
            --scheme $XCODE_SCHEME
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - App Store Connect Users
        submit_to_app_store: false