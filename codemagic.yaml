workflows:
  ios-workflow:
    name: iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: CodeMagic Integration
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.zura.app
      vars:
        BUNDLE_ID: "com.zura.app"
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles

      
      - name: Integrate existing Firebase configuration
        script: |
          echo "üî• Integrating existing GoogleService-Info.plist..."
          
          # Verify the existing file exists
          if [ ! -f "ios/Runner/GoogleService-Info.plist" ]; then
            echo "‚ùå GoogleService-Info.plist not found in repo"
            exit 1
          fi
          
          echo "‚úÖ Found existing GoogleService-Info.plist"
          
          # Verify content
          if grep -q "reel-match-e7729" ios/Runner/GoogleService-Info.plist; then
            echo "‚úÖ File contains correct project ID"
          else
            echo "‚ùå File verification failed"
            exit 1
          fi
          
          # CRITICAL: Add the file to the Xcode project properly
          echo "üîß Adding GoogleService-Info.plist to Xcode project..."
          
          # Generate unique UUIDs for the file references
          PLIST_UUID=$(uuidgen | tr '[:lower:]' '[:upper:]' | tr -d '-')
          PLIST_BUILD_UUID=$(uuidgen | tr '[:lower:]' '[:upper:]' | tr -d '-')
          
          # Get the path to project.pbxproj
          PBXPROJ_PATH="ios/Runner.xcodeproj/project.pbxproj"
          
          # Check if file is already in project (avoid duplicates)
          if grep -q "GoogleService-Info.plist" "$PBXPROJ_PATH"; then
            echo "‚ö†Ô∏è  GoogleService-Info.plist already in project, skipping integration"
          else
            echo "üìù Adding file references to project..."
            
            # Add the file reference to PBXFileReference section
            sed -i '' "/\/\* End PBXFileReference section \*\//i\\
            \\t\\t${PLIST_UUID} \/\* GoogleService-Info.plist \*\/ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = \"GoogleService-Info.plist\"; sourceTree = \"<group>\"; };
            " "$PBXPROJ_PATH"
            
            # Add the file to the Runner group
            sed -i '' "/\/\* Runner \*\/ = {/,/children = (/,/);/{
              /children = (/a\\
            \\t\\t\\t\\t${PLIST_UUID} \/\* GoogleService-Info.plist \*\/,
            }" "$PBXPROJ_PATH"
            
            # Add to PBXBuildFile section
            sed -i '' "/\/\* End PBXBuildFile section \*\//i\\
            \\t\\t${PLIST_BUILD_UUID} \/\* GoogleService-Info.plist in Resources \*\/ = {isa = PBXBuildFile; fileRef = ${PLIST_UUID} \/\* GoogleService-Info.plist \*\/; };
            " "$PBXPROJ_PATH"
            
            # Add to PBXResourcesBuildPhase
            sed -i '' "/\/\* Resources \*\/ = {/,/files = (/,/);/{
              /files = (/a\\
            \\t\\t\\t\\t${PLIST_BUILD_UUID} \/\* GoogleService-Info.plist in Resources \*\/,
            }" "$PBXPROJ_PATH"
            
            echo "‚úÖ GoogleService-Info.plist successfully integrated into Xcode project"
          fi
          
          # Final verification
          if grep -q "GoogleService-Info.plist" "$PBXPROJ_PATH"; then
            echo "‚úÖ File is now part of Xcode project"
          else
            echo "‚ùå Failed to integrate file into project"
            exit 1
          fi
      
      - name: Get Flutter dependencies
        script: |
          echo "üì¶ Getting Flutter dependencies..."
          flutter clean
          flutter pub get

      - name: Install iOS dependencies
        script: |
          echo "üçé Installing iOS dependencies..."
          cd ios && pod install
      
      - name: Build iOS app
        script: |
          echo "üèóÔ∏è Building iOS app..."
          flutter build ios --release
      
      - name: Build iOS IPA
        script: |
          echo "üì¶ Creating IPA..."
          xcode-project build-ipa \
            --workspace ios/$XCODE_WORKSPACE \
            --scheme $XCODE_SCHEME
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        beta_groups:
          - App Store Connect Users
        submit_to_app_store: false